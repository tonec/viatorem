$tag-prefix-cls: "#{$ant-prefix}-tag";

.#{$tag-prefix-cls} {
  @include reset-component;
  display: inline-block;
  line-height: 20px;
  height: 22px;
  padding: 0 7px;
  border-radius: $border-radius-base;
  border: $border-width-base $border-style-base $border-color-base;
  background: $tag-default-bg;
  font-size: $tag-font-size;
  transition: all 0.3s $ease-out;
  opacity: 1;
  margin-right: 8px;
  cursor: pointer;
  white-space: nowrap;

  &:hover {
    opacity: 0.85;
  }

  &,
  a,
  a:hover {
    color: $tag-default-color;
  }

  &-text {
    a:first-child:last-child {
      display: inline-block;
      margin: 0 -8px;
      padding: 0 8px;
    }
  }

  .#{$iconfont-css-prefix}-cross {
    @include iconfont-size-under-12px(10px);
    cursor: pointer;
    margin-left: 3px;
    transition: all .3s;
    color: $text-color-secondary;
    font-weight: bold;

    &:hover {
      color: $heading-color;
    }
  }

  &-has-color {
    border-color: transparent;
    &,
    a,
    a:hover,
    .#{$iconfont-css-prefix}-cross,
    .#{$iconfont-css-prefix}-cross:hover {
      color: #fff;
    }
  }

  &-checkable {
    background-color: transparent;
    border-color: transparent;
    &:not(&-checked):hover {
      color: $primary-color;
    }
    &:active,
    &-checked {
      color: #fff;
    }
    &-checked {
      background-color: $primary-6;
    }
    &:active {
      background-color: $primary-7;
    }
  }

  &-close {
    width: 0 !important;
    padding: 0;
    margin: 0;
  }

  &-zoom-enter,
  &-zoom-appear {
    animation: antFadeIn .2s $ease-in-out-circ;
    animation-fill-mode: both;
  }

  &-zoom-leave {
    animation: antZoomOut .3s $ease-in-out-circ;
    animation-fill-mode: both;
  }

  $colors: (
    pink: (
      1: $pink-1,
      3: $pink-3,
      6: $pink-6
    ),
    magenta: (
      1: $magenta-1,
      3: $magenta-3,
      6: $magenta-6
    ),
    red: (
      1: $red-1,
      3: $red-3,
      6: $red-6
    ),
    volcano: (
      1: $volcano-1,
      3: $volcano-3,
      6: $volcano-6
    ),
    orange: (
      1: $orange-1,
      3: $orange-3,
      6: $orange-6
    ),
    yellow: (
      1: $yellow-1,
      3: $yellow-3,
      6: $yellow-6
    ),
    gold: (
      1: $gold-1,
      3: $gold-3,
      6: $gold-6
    ),
    cyan: (
      1: $cyan-1,
      3: $cyan-3,
      6: $cyan-6
    ),
    lime: (
      1: $lime-1,
      3: $lime-3,
      6: $lime-6
    ),
    green: (
      1: $green-1,
      3: $green-3,
      6: $green-6
    ),
    blue: (
      1: $blue-1,
      3: $blue-3,
      6: $blue-6
    ),
    geekblue: (
      1: $geekblue-1,
      3: $geekblue-3,
      6: $geekblue-6
    ),
    purple: (
      1: $purple-1,
      3: $purple-3,
      6: $purple-6
    )
  );

  // mixin to iterate over colors and create CSS class for each one
  @mixin make-color-classes() {
    @each $color, $color-details in $colors {
      $lightColor: map-get($color-details, '1');
      $lightBorderColor: map-get($color-details, '3');
      $darkColor: map-get($color-details, '6');

      &-#{$color} {
        color: $darkColor;
        background: $lightColor;
        border-color: $lightBorderColor;
      }
      &-#{$color}-inverse {
        background: $darkColor;
        border-color: $darkColor;
        color: #fff;
      }
    }
  }

  @include make-color-classes();
}
